# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-10-17 10:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_type', models.IntegerField(choices=[(1, '私户'), (2, '公户')], default=1, verbose_name='账户类型')),
                ('name', models.CharField(max_length=50, verbose_name='银行卡')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('beizhu', models.CharField(max_length=100, verbose_name='备注')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
            ],
            options={
                'verbose_name': '银行卡',
                'verbose_name_plural': '银行卡',
            },
        ),
        migrations.CreateModel(
            name='CardTrans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('fromCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tran_from_card', to='ticket.Card', verbose_name='转出账户')),
                ('toCard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tran_to_card', to='ticket.Card', verbose_name='转入账户')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('need_collect_benjin', models.FloatField(default=0, verbose_name='应收本金')),
                ('need_collect_lixi', models.FloatField(default=0, verbose_name='应收利息')),
                ('need_pay_benjin', models.FloatField(default=0, verbose_name='应收本金')),
                ('need_pay_lixi', models.FloatField(default=0, verbose_name='应付利息')),
                ('yufu_benjin', models.FloatField(default=0, verbose_name='预付本金')),
                ('yufu_lixi', models.FloatField(default=0, verbose_name='预付利息')),
                ('yushou_benjin', models.FloatField(default=0, verbose_name='预收本金')),
                ('yushou_lixi', models.FloatField(default=0, verbose_name='预收利息')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
            ],
            options={
                'verbose_name': '客户',
                'verbose_name_plural': '客户',
            },
        ),
        migrations.CreateModel(
            name='DashBoard',
            fields=[
                ('xianjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='现金')),
                ('kucun', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='库存票')),
                ('edu_keyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='可用额度')),
                ('edu_yiyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='已用额度')),
                ('edu_baozhengjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='保证金')),
                ('edu_chineipiao', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='池内票')),
                ('edu_licai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='理财')),
                ('edu_chaoduandai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='超短贷')),
                ('need_collect', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应收')),
                ('need_pay', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应付')),
                ('yushou', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预收')),
                ('yufu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预付')),
                ('feiyong_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务费用')),
                ('feiyong_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本费用')),
                ('feiyong_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='管理杂费')),
                ('lirun_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务利润')),
                ('lirun_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本收益')),
                ('lirun_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='其他利润')),
                ('day', models.DateField(primary_key=True, serialize=False, verbose_name='统计日期')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DashBoardSum',
            fields=[
                ('xianjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='现金')),
                ('kucun', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='库存票')),
                ('edu_keyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='可用额度')),
                ('edu_yiyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='已用额度')),
                ('edu_baozhengjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='保证金')),
                ('edu_chineipiao', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='池内票')),
                ('edu_licai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='理财')),
                ('edu_chaoduandai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='超短贷')),
                ('need_collect', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应收')),
                ('need_pay', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应付')),
                ('yushou', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预收')),
                ('yufu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预付')),
                ('feiyong_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务费用')),
                ('feiyong_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本费用')),
                ('feiyong_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='管理杂费')),
                ('lirun_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务利润')),
                ('lirun_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本收益')),
                ('lirun_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='其他利润')),
                ('day', models.DateField(primary_key=True, serialize=False, verbose_name='统计日期')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeeDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('fee_type', models.IntegerField(choices=[(101, '新建开票'), (102, '新建池开票'), (103, '票据入库'), (104, '票据入池'), (105, '票据在池到期'), (106, '票据导入'), (107, '开票补充信息'), (108, '池开票补充信息'), (201, '新建付款'), (202, '新建收款'), (203, '现金付票款'), (204, '现金收票款'), (205, '使用预收款付应收票款'), (206, '使用预付款付应付票款'), (301, '新建应收款'), (302, '新建应付款'), (303, '应收款收本'), (304, '应收款收息'), (305, '应付款还本'), (306, '应付款还息'), (307, '新建预收款'), (308, '新建预付款'), (309, '借贷款结息'), (401, '新建银行卡'), (402, '银行卡存入'), (403, '银行卡取出'), (404, '银行卡转账'), (500, '新建资金池'), (501, '存入保证金'), (502, '取出保证金'), (503, '新增超短贷'), (504, '超短贷还本'), (505, '超短贷还息'), (506, '池开票还款'), (507, '超短贷结息'), (510, '新增理财'), (511, '理财前置收息'), (512, '理财到期收款')], default=1, verbose_name='费用类型')),
                ('fee_detail_type', models.IntegerField(choices=[(1, '票据'), (2, '票据订单'), (3, '借贷订单'), (4, '预收付款'), (41, '预收款'), (42, '预付款'), (5, '银行卡'), (6, '保证金'), (7, '超短贷'), (8, '理财'), (9, '资金池')], default=1, verbose_name='相关费用类型')),
                ('fee_detail_pk', models.CharField(max_length=100, verbose_name='相关费用ID')),
            ],
        ),
        migrations.CreateModel(
            name='Loan_Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benjin', models.FloatField(default=0, verbose_name='本金')),
                ('lilv', models.FloatField(default=0, verbose_name='利率')),
                ('lixi_begin_date', models.DateField(verbose_name='计息日期')),
                ('lixi_end_date', models.DateField(verbose_name='到期日期')),
                ('benjin_payed', models.FloatField(default=0, verbose_name='已还本金')),
                ('benjin_needpay', models.FloatField(default=0, verbose_name='待还本金')),
                ('lixi', models.FloatField(default=0, verbose_name='利息')),
                ('lixi_payed', models.FloatField(default=0, verbose_name='已还利息')),
                ('lixi_needpay', models.FloatField(default=0, verbose_name='待还利息')),
                ('lixi_sum_date', models.DateField(verbose_name='结息日期')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('is_payed', models.BooleanField(default=False, verbose_name='是否还清')),
                ('is_end', models.BooleanField(default=False, verbose_name='是否到期')),
                ('order_type', models.IntegerField(choices=[(3, '借款订单'), (4, '贷款订单')], default=3, verbose_name='订单类型')),
                ('jiedairen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loanorder_customer', to='ticket.Customer', verbose_name='借贷人')),
                ('yinhangka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loanorder_card', to='ticket.Card', verbose_name='借贷卡')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='MoneyWithCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='money_card', to='ticket.Card', verbose_name='银行卡')),
            ],
        ),
        migrations.CreateModel(
            name='MoneyWithCardPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moneys_card', to='ticket.Card', verbose_name='银行卡')),
            ],
        ),
        migrations.CreateModel(
            name='OperLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xianjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='现金')),
                ('kucun', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='库存票')),
                ('edu_keyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='可用额度')),
                ('edu_yiyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='已用额度')),
                ('edu_baozhengjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='保证金')),
                ('edu_chineipiao', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='池内票')),
                ('edu_licai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='理财')),
                ('edu_chaoduandai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='超短贷')),
                ('need_collect', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应收')),
                ('need_pay', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='应付')),
                ('yushou', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预收')),
                ('yufu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='预付')),
                ('feiyong_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务费用')),
                ('feiyong_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本费用')),
                ('feiyong_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='管理杂费')),
                ('lirun_yewu', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='业务利润')),
                ('lirun_ziben', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='资本收益')),
                ('lirun_za', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='其他利润')),
                ('oper_type', models.IntegerField(choices=[(101, '新建开票'), (102, '新建池开票'), (103, '票据入库'), (104, '票据入池'), (105, '票据在池到期'), (106, '票据导入'), (107, '开票补充信息'), (108, '池开票补充信息'), (201, '新建付款'), (202, '新建收款'), (203, '现金付票款'), (204, '现金收票款'), (205, '使用预收款付应收票款'), (206, '使用预付款付应付票款'), (301, '新建应收款'), (302, '新建应付款'), (303, '应收款收本'), (304, '应收款收息'), (305, '应付款还本'), (306, '应付款还息'), (307, '新建预收款'), (308, '新建预付款'), (309, '借贷款结息'), (401, '新建银行卡'), (402, '银行卡存入'), (403, '银行卡取出'), (404, '银行卡转账'), (500, '新建资金池'), (501, '存入保证金'), (502, '取出保证金'), (503, '新增超短贷'), (504, '超短贷还本'), (505, '超短贷还息'), (506, '池开票还款'), (507, '超短贷结息'), (510, '新增理财'), (511, '理财前置收息'), (512, '理财到期收款')], default=101, verbose_name='操作类型')),
                ('detail', models.CharField(max_length=255, verbose_name='相关票据卡')),
                ('contdetail', models.TextField(verbose_name='详情')),
                ('search_date', models.DateField(auto_now_add=True, verbose_name='添加日期')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '操作记录',
                'verbose_name_plural': '操作记录',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.IntegerField(choices=[(1, '付款订单'), (2, '收款订单')], default=1, verbose_name='订单类型')),
                ('money', models.FloatField(default=0, verbose_name='合计应收付金额')),
                ('ticket_sum', models.FloatField(default=0, verbose_name='合计票面价格')),
                ('ticket_count', models.IntegerField(default=0, verbose_name='票据数目')),
                ('fee_sum', models.FloatField(default=0, verbose_name='合计费用金额')),
                ('fee_count', models.IntegerField(default=0, verbose_name='费用数目')),
                ('payfee_sum', models.FloatField(default=0, verbose_name='已支付金额')),
                ('payfee_count', models.IntegerField(default=0, verbose_name='已支付数目')),
                ('total_sum', models.FloatField(default=0, verbose_name='总金额')),
                ('needpay_sum', models.FloatField(default=0, verbose_name='剩余金额')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_order_customer', to='ticket.Customer', verbose_name='客户')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='Per_Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.IntegerField(choices=[(5, '预收票款'), (6, '预付票款'), (7, '预收款付账'), (8, '预付款收票')], default=5, verbose_name='费用类型')),
                ('money', models.FloatField(default=0, verbose_name='金额')),
                ('jiedairen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pre_order_customer', to='ticket.Customer', verbose_name='客户')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_order_pay', to='ticket.Order', verbose_name='票据订单')),
                ('yinhangka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pre_order_card', to='ticket.Card', verbose_name='银行卡')),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='资金池')),
                ('edu_keyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='可用额度')),
                ('edu_yiyong', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='已用额度')),
                ('edu_baozhengjin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='保证金')),
                ('edu_chineipiao', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='池内票')),
                ('edu_licai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='理财')),
                ('edu_chaoduandai', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='超短贷')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='修改日期')),
            ],
        ),
        migrations.CreateModel(
            name='PoolLicai',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benjin', models.FloatField(default=0, verbose_name='本金')),
                ('lilv', models.FloatField(default=0, verbose_name='利率')),
                ('lixi', models.FloatField(default=0, verbose_name='利息')),
                ('lixi_begin_date', models.DateField(verbose_name='计息日期')),
                ('lixi_end_date', models.DateField(verbose_name='到期日期')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('is_front', models.BooleanField(default=False, verbose_name='利息前置')),
                ('is_end', models.BooleanField(default=False, verbose_name='是否到期')),
                ('is_payed', models.BooleanField(default=False, verbose_name='是否还清')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licai_pool', to='ticket.Pool', verbose_name='资金池')),
                ('yinhangka', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licai_card', to='ticket.Card', verbose_name='银行卡')),
            ],
            options={
                'verbose_name': '理财',
                'verbose_name_plural': '理财',
            },
        ),
        migrations.CreateModel(
            name='StoreTicketsImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.CharField(max_length=100, verbose_name='时间戳')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='导入时间')),
                ('qianpaipiaohao', models.CharField(blank=True, max_length=100, null=True, verbose_name='前排票号')),
                ('piaohao', models.CharField(blank=True, max_length=100, null=True, verbose_name='票号')),
                ('chupiaoren', models.CharField(max_length=100, verbose_name='出票人')),
                ('shoukuanren', models.CharField(max_length=100, verbose_name='收款人\t')),
                ('piaomianjiage', models.FloatField(default=0, verbose_name='票据金额（元）\t')),
                ('piaomianlixi', models.FloatField(default=0, verbose_name='票面附带利息')),
                ('maipiaoriqi', models.DateField(verbose_name='购买日期')),
                ('chupiaoriqi', models.DateField(verbose_name='出票日期')),
                ('daoqiriqi', models.DateField(verbose_name='到期日期')),
                ('leixing', models.CharField(max_length=100, verbose_name='类型')),
                ('zhuangtai', models.CharField(max_length=100, verbose_name='状态\t')),
                ('chupiaohang', models.CharField(max_length=100, verbose_name='出票人开户行')),
                ('chupiaohangb', models.CharField(max_length=100, verbose_name='出票人开户行B')),
                ('chengduiren', models.CharField(max_length=100, verbose_name='承兑人/承兑银行\t')),
                ('shoupiaoren', models.CharField(max_length=100, verbose_name='收票人账号')),
                ('shoupiaohang', models.CharField(max_length=100, verbose_name='收票人开户行')),
                ('saved', models.BooleanField(default=False, verbose_name='是否已保存')),
            ],
            options={
                'verbose_name': '导入票据',
                'verbose_name_plural': '导入票据',
            },
        ),
        migrations.CreateModel(
            name='SuperLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benjin', models.FloatField(default=0, verbose_name='本金')),
                ('lilv', models.FloatField(default=0, verbose_name='利率')),
                ('lixi_begin_date', models.DateField(verbose_name='计息日期')),
                ('lixi_end_date', models.DateField(verbose_name='到期日期')),
                ('benjin_payed', models.FloatField(default=0, verbose_name='已还本金')),
                ('benjin_needpay', models.FloatField(default=0, verbose_name='待还本金')),
                ('lixi', models.FloatField(default=0, verbose_name='利息')),
                ('lixi_payed', models.FloatField(default=0, verbose_name='已还利息')),
                ('lixi_needpay', models.FloatField(default=0, verbose_name='待还利息')),
                ('lixi_sum_date', models.DateField(verbose_name='结息日期')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='添加日期')),
                ('is_payed', models.BooleanField(default=False, verbose_name='是否还清')),
                ('is_end', models.BooleanField(default=False, verbose_name='是否到期')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_loan_pool', to='ticket.Pool', verbose_name='资金池')),
            ],
            options={
                'verbose_name': '超短贷',
                'verbose_name_plural': '超短贷',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_status', models.IntegerField(choices=[(1, '在库'), (2, '待完成'), (5, '在池'), (3, '卖出'), (7, '在池到期')], default=1, verbose_name='状态')),
                ('t_type', models.IntegerField(choices=[(1, '纸票'), (2, '电票')], default=1, verbose_name='类型')),
                ('goumairiqi', models.DateTimeField(auto_now_add=True, verbose_name='购买日期')),
                ('qianpaipiaohao', models.CharField(blank=True, max_length=100, null=True, verbose_name='前排票号')),
                ('piaohao', models.CharField(blank=True, max_length=100, null=True, verbose_name='票号')),
                ('chupiaohang', models.CharField(max_length=100, verbose_name='出票行')),
                ('chupiaoriqi', models.DateField(verbose_name='出票日期')),
                ('daoqiriqi', models.DateField(verbose_name='到期日期')),
                ('piaomianjiage', models.FloatField(default=0, verbose_name='票面价格(元)')),
                ('gourujiage', models.FloatField(default=0, verbose_name='购入价格')),
                ('gouruzijinchi', models.BooleanField(default=False, verbose_name='资金池购入')),
                ('payedzijinchi', models.BooleanField(default=False, verbose_name='保证金还款')),
                ('gongyingshang', models.CharField(max_length=100, verbose_name='供应商')),
                ('pay_status', models.IntegerField(choices=[(1, '待付款'), (2, '已付款')], default=1, verbose_name='状态')),
                ('paytime', models.DateTimeField(blank=True, null=True, verbose_name='付款时间')),
                ('maichuriqi', models.DateTimeField(blank=True, null=True, verbose_name='卖出日期')),
                ('maichujiage', models.FloatField(default=0, verbose_name='卖出价格')),
                ('maipiaoren', models.CharField(blank=True, max_length=100, null=True, verbose_name='买票人')),
                ('sell_status', models.IntegerField(choices=[(3, '待收款'), (4, '已收款')], default=3, verbose_name='状态')),
                ('selltime', models.DateTimeField(blank=True, null=True, verbose_name='收款时间')),
                ('lirun', models.IntegerField(default=0, verbose_name='利润')),
                ('payorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pay_order', to='ticket.Order', verbose_name='付款订单')),
                ('sellorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sell_order', to='ticket.Order', verbose_name='收款订单')),
            ],
            options={
                'verbose_name': '票据',
                'verbose_name_plural': '票据',
            },
        ),
        migrations.CreateModel(
            name='TicketsImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.CharField(max_length=100, verbose_name='时间戳')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='导入时间')),
                ('piaohao', models.CharField(blank=True, max_length=100, null=True, verbose_name='票号')),
                ('chupiaoren', models.CharField(max_length=100, verbose_name='出票人')),
                ('shoukuanren', models.CharField(max_length=100, verbose_name='收款人\t')),
                ('piaomianjiage', models.FloatField(default=0, verbose_name='票据金额（元）\t')),
                ('piaomianlixi', models.FloatField(default=0, verbose_name='票面附带利息')),
                ('chupiaoriqi', models.DateField(verbose_name='出票日期')),
                ('daoqiriqi', models.DateField(verbose_name='到期日期')),
                ('leixing', models.CharField(max_length=100, verbose_name='类型')),
                ('zhuangtai', models.CharField(max_length=100, verbose_name='状态\t')),
                ('chupiaohang', models.CharField(max_length=100, verbose_name='出票人开户行')),
                ('chupiaohangb', models.CharField(max_length=100, verbose_name='出票人开户行B')),
                ('chengduiren', models.CharField(max_length=100, verbose_name='承兑人/承兑银行\t')),
                ('shoupiaoren', models.CharField(max_length=100, verbose_name='收票人账号')),
                ('shoupiaohang', models.CharField(max_length=100, verbose_name='收票人开户行')),
                ('saved', models.BooleanField(default=False, verbose_name='是否已保存')),
            ],
            options={
                'verbose_name': '导入票据',
                'verbose_name_plural': '导入票据',
            },
        ),
        migrations.AddField(
            model_name='moneywithcardpool',
            name='pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moneys_pool', to='ticket.Pool', verbose_name='资金池'),
        ),
        migrations.AddField(
            model_name='feedetail',
            name='oper_log',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carddetail_log', to='ticket.OperLog', verbose_name='操作详情'),
        ),
    ]
